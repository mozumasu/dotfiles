snippets:
  - keyword: awsl
    snippet: aws configure list

  - keyword: ic;
    snippet: aws ec2-instance-connect ssh --instance-id {{instance-id}} --os-user ec2-user

  - keyword: icu;
    snippet: aws ec2-instance-connect ssh --instance-id {{instance-id}} --os-user {{ec2-user}}

  - keyword: smg;
    snippet: aws secretsmanager get-secret-value --secret-id {{env-HogePassword}} --query SecretString --output text

  - keyword: awsv
    snippet: aws-vault

  - keyword: etr;
    snippet:
      aws ecs run-task \
        --cluster {{EcsCluster}} \
        --task-definition {{TaskDefinition}} \
        --launch-type FARGATE \
        --network-configuration "awsvpcConfiguration={subnets=[{{SubnetId}}],securityGroups=[{{SecurityGroupId}}],assignPublicIp=DISABLED}"

  - keyword: cfls
    snippet:
      aws cloudformation describe-stacks --profile {{aws-profile}} --query 'Stacks[?contains(StackName,`prod-`)].[StackName,StackStatus]' --output table

  - keyword: cdkls
    snippet: cdk list -c env=

completions:
  - name: instance-id
    patterns:
      - "aws ec2-instance-connect ssh --instance-id( .*)?"
    sourceCommand: "aws ec2 describe-instances --query 'Reservations[*].Instances[*].[InstanceId, Tags[?Key==`Name`].Value | [0]]' --output text"
    callback: "awk -F ' ' '{ print $1 }'"

  - name: aws profile
    patterns:
      - "aws-vault login( .*)? $"
      - '^aws\b.*--profile(?:(?:=|\s+)([A-Za-z0-9._-]*))?\s*$'
    sourceCommand: "aws configure list-profiles"
  # ECS
  - name: EcsCluster
    patterns:
    # right after the option, value not typed yet
    - '^.*--cluster(?:$|\\\s*)$'
    - '^.*--cluster\s+$'
    # while typing the value (until another -- option or a line continuation \ appears)
    - '^.*--cluster(?:=|\s+)(?=[^\s\\-])[^\\]*$'
    sourceCommand: aws ecs list-clusters | jq -r '.clusterArns[] | split("/")[-1]'

  - name: TaskDefinition
    patterns:
    # right after the option, value not typed yet
    - '^.*--task-definition(?:$|\\\s*)$'
    - '^.*--task-definition\s+$'
    # while typing the value (until another -- option or a line continuation \ appears)
    - '^.*--task-definition(?:=|\s+)(?=[^\s\\-])[^\\]*$'
    sourceCommand: aws ecs list-task-definitions --status ACTIVE --sort DESC | jq -r '.taskDefinitionArns[] | split("/")[-1]'

  - name: SubnetId
    patterns:
      - '^.*\bsubnets=\[[^\]]*$'
      # - '^.*subnets=\[(.*)?$'
      - '^.*\bsubnet-[0-9a-f]*$'
    sourceCommand: aws ec2 describe-subnets --query 'Subnets[].SubnetId' --output text | tr '\t' '\n'

  - name: SecurityGroupId
    patterns:
      - '^.*securityGroups=\[[^\]]*$'
      # - '^.*securityGroups=\[(.*)?$'
      - '^.*\bsg-[0-9a-f]*$'
    sourceCommand: aws ec2 describe-security-groups --query 'SecurityGroups[].GroupId' --output text | tr '\t' '\n'

  - name: cloudformation stack name
    patterns:
    - 'aws cloudformation.*--stack-name'
    sourceCommand: aws cloudformation describe-stacks --query 'Stacks[].StackName' --output text | tr '\t' '\n'

  - name: aws cli completer
    patterns:
      - '^\s*aws(?:$|\s.*)$'
    sourceCommand: 'COMP_LINE="${LBUFFER}${RBUFFER}" COMP_POINT=${#LBUFFER} aws_completer 2>/dev/null'
    options:
      --prompt: "'aws > '"

snippets:
  # snippet and keyword abbrev
  - name: git status
    keyword: gs
    snippet: git status --short --branch

  # snippet with placeholder
  - name: git commit message
    keyword: gcim
    snippet: git commit -m '{{commit_message}}'

  - name: "null"
    keyword: "null"
    snippet: ">/dev/null 2>&1"
    # auto expand condition
    # If not defined, it is only valid at the beginning of a line.
    context:
      # buffer: ''
      lbuffer: '.+\s'
      # rbuffer: ''

  - name: branch
    keyword: B
    snippet: git symbolic-ref --short HEAD
    context:
      lbuffer: '^git\s+checkout\s+'
    evaluate: true # eval snippet

  - name: today
    keyword: td
    snippet: date +%Y-%m-%d
    evaluate: true

  - keyword: G
    snippet: '| grep'
    context:
      lbuffer: '.+\s'
 
  - keyword: '-'
    snippet: cd -

  - keyword: proot
    snipepet: 'cd $(git rev-parse --show-toplevel)'

  - keyword: ll
    snippet: ls -l

  - keyword: la
    snippet: ls -a

  - keyword: lla
    snippet: ls -la

  - keyword: r
    snippet: exec $SHELL -l

  - keyword: myip
    snippet: curl ifconfig.me

  - keyword: dhosts
    snippet: nvim ~/.ssh/conf.d/hosts/

  - keyword: hosts
    snippet: sudo nvim /etc/hosts

  - keyword: zenn
    snippet: nvim ~/src/private/zenn

  - keyword: g
    snippet: git

  - keyword: gs
    snippet: git status

  - keyword: gsw
    snippet: git switch

  - keyword: gpl
    snippet: git pull

  - keyword: gfe
    snippet: git fetch

  - keyword: lg
    snippet: lazygit

  - keyword: mul
    snippet: multipass

  - keyword: ap
    snippet: ansible-playbook

  - keyword: anv
    snippet: ansible-valut

  - keyword: tf
    snippet: terraform

  - keyword: ap
    snippet: apply
    context:
      lbuffer: '^terraform\s+'

  - keyword: pl
    snippet: plan
    context:
      lbuffer: '^terraform\s+'

  - keyword: in
    snippet: init
    context:
      lbuffer: '^terraform\s+'

  - keyword: st
    snippet: state
    context:
      lbuffer: '^terraform\s+'

  - keyword: stl
    snippet: state list
    context:
      lbuffer: '^terraform\s+'

  - keyword: awsl
    snippet: aws configure list

  - keyword: py
    snippet: python3

  - keyword: upy
    snippet: uv run python

  - keyword: f
    snippet: open .

  - keyword: vpn
    snippet: vpnutil

  - keyword: ld
    snippet: lazydocker

completions:
  # simple sourceCommand, no callback
  - name: kill signal
    patterns:
      - "^kill -s $"
    sourceCommand: "kill -l | tr ' ' '\\n'"
    options:
      --prompt: "'Kill Signal> '"

  # use excludePatterns and callback
  - name: kill pid
    patterns:
      - "^kill( .*)? $"
    excludePatterns:
      # -l, -n or -s is followed by SIGNAL instead of PID
      - " -[lns] $"
    sourceCommand: "LANG=C ps -ef | sed 1d"
    options:
      --multi: true
      --prompt: "'Kill Process> '"
    callback: "awk '{print $2}'"

  # Use null (\0) termination Input / Output
  - name: chdir
    patterns:
      - "^cd $"
    sourceCommand: "find . -path '*/.git' -prune -o -maxdepth 5 -type d -print0"
    options:
      # Added --read0 if null termination is used in `sourceCommand` output.
      --read0: true
      --prompt: "'Chdir> '"
      --preview: "cd {} && ls -a | sed '/^[.]*$/d'"
    callback: "cut -z -c 3-"
    callbackZero: true  # null termination is used in `callback` I/O
